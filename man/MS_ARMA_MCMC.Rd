% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grouped_MS_ARMA_MCMC.R
\name{MS_ARMA_MCMC}
\alias{MS_ARMA_MCMC}
\title{Fit grouped GARCH model to time series}
\usage{
MS_ARMA_MCMC(
  y,
  Expl_X = NULL,
  nb_MCMC = 100,
  regime = 1,
  AR_lags = 1,
  MA_lags = 1,
  CP_or_MS = "MS",
  temper = 1,
  force_reg_1 = 0,
  sn_dep = NULL,
  sn_sig_dep = NULL,
  theta_dep = NULL,
  sigma_dep = NULL
)
}
\arguments{
\item{x}{a two-dimensional numeric vector of a grouped time series with accompanying group index in second dimension.
One-dimensional if input shall be only a single time series.}

\item{order}{a vector c(p,q) that indicates the order p of ARCH and q of GARCH part}

\item{series}{name for the series. Defaults to \code{deparse(substitute(x))}}

\item{control}{a list of control parameters as set up by \code{garch.control}}

\item{maxiter}{gives the maximum number of log-likelihood function
evaluations \code{maxiter} and the maximum number of iterations
\code{2*maxiter} the optimizer is allowed to compute.}

\item{trace}{logical. Trace optimizer output?}

\item{start}{If given this numeric vector is used as the initial estimate
of the GARCH coefficients.  Default initialization is to set the
GARCH parameters to slightly positive values and to initialize the
intercept such that the unconditional variance of the initial GARCH
is equal to the variance of \code{x}}

\item{grad}{character indicating whether analytical gradients or a numerical
approximation is used for the optimization.}

\item{abstol}{absolute function convergence tolerance.}

\item{reltol}{relative function convergence tolerance.}

\item{xtol}{coefficient-convergence tolerance.}

\item{falsetol}{false convergence tolerance.}

\item{\dots}{additional arguments for \code{\link{qr}} when computing
the asymptotic covariance matrix.}
}
\value{
Object of class \code{GARCH}.
\item{order}{the order of the fitted model.}
\item{coef}{coef estimated GARCH coefficients for the fitted model across all grouped time series.}
\item{n.likeli}{the negative log-likelihood function evaluated at the
coefficient estimates (apart from some constant).}
\item{n.used}{the number of observations of \code{x}.}
\item{residuals}{the series of residuals.}
\item{fitted.values}{the bivariate series of conditional standard
deviation predictions for \code{x}.}
\item{series}{the name of the series \code{x}.}
\item{frequency}{the frequency of the series \code{x}.}
\item{call}{the call of the \code{garch} function.}
\item{vcov}{outer product of gradient estimate of the asymptotic-theory
covariance matrix for the coefficient estimates.}
}
\description{
Fit a Generalized Autoregressive Conditional Heteroscedastic GARCH(p,q)
time series model to the data by computing the maximum-likelihood
estimates of the conditionally normal model
to a group of univariate time series by finding coefficients
that serve best the whole group.
}
\details{
\code{garch} uses a Quasi-Newton optimizer to find the maximum
likelihood estimates of the conditionally normal model.  The first
max(p, q) values are assumed to be fixed.  The optimizer uses a hessian
approximation computed from the BFGS update.  Only a Cholesky factor
of the Hessian approximation is stored.  For more details see Dennis
et al. (1981), Dennis and Mei (1979), Dennis and More (1977), and
Goldfarb (1976).  The gradient is either computed analytically or
using a numerical approximation.
}
